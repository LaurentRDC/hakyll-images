name: CI

defaults:
  run:
    shell: bash

on:
  push:
    branches: [master]
  pull_request:

jobs:
  build-and-test:
    if: contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_opts: "--constraint="hakyll -usepandoc -previewserver -watchserver" --allow-newer"

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install cabal/ghc
      uses: haskell/actions/setup@v1
      id: setup-haskell
      with:
        ghc-version: '9.0.1'
        cabal-version: '3.4.0.0'

    - name: Set PATH for cabal-installed executables
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          echo "$HOME\AppData\Roaming\cabal\bin" >> $GITHUB_PATH
        else
          echo "$HOME/.cabal/bin" >> $GITHUB_PATH
        fi
    
    - name: Cabal freeze
      run: cabal freeze ${{ matrix.build_opts }}
        
    - name: Cache cabal work
      uses: actions/cache@v2
      with:
        path: |
          dist-newstyle
          ${{ steps.setup-haskell.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ hashFiles('cabal.project.freeze') }}-cabal-install-v2

    - name: Build hakyll-images
      run: |
        cabal build ${{ matrix.build_opts }}
    
    - name: Unit tests
      run: cabal test ${{ matrix.build_opts }} --test-show-details=always

  release:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Create release description
      run: |
        python release-description.py CHANGELOG.md > description.md
        cat description.md

    - name: Create release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        body_path: description.md
